/* GameBoard.css */
.game-board {
  width: 100%; /* Ensure the game board takes up the full width */
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  z-index: 2; /* Ensure the game board is above the background */
}

.instructions {
  font-style: bold; /* Italicize the text */
  font-weight: bold; /* Bold the text */
  margin-top: 20px; /* Add margin for better spacing */
}

.game-controls {
  min-width: 700px; /* Set a minimum width for the controls */
  max-width: 800px; /* Limit the maximum width of the controls */
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  justify-content: left;
  align-items: center;
  padding: 10px;
  border: 2px solid #ccc; /* Border color */
  border-radius: 10px; /* Rounded edges */
  background-color: #f9f9f9; /* Background color */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow */
  color: black;
}

.game-controls .game-info {
  display: flex;
  width: 100%;
  flex-direction: row;
  justify-content: space-evenly;
  align-items: center;
}

.game-controls .game-info .game-info-item {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: middle;
  padding: 10px;
}

.game-controls .game-info .game-info-item .label{
  display: flex;
  flex-direction: flex-start;
  justify-content: left;
  align-items: top;
  background-color: #f9f9f9; /* Background color */
}
.game-controls .game-info .game-info-item .label .p {
  margin: 0;
  justify-content: left;
}

.game-controls .game-info .game-info-item .value-box {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 1em;
  max-height: 2em;
  min-width: 50px;
  padding: 10px;
  border: 2px solid #ddd; /* Border color */
  border-radius: 10px; /* Rounded edges */
  background-color: #e9e9e9; /* Slightly different background color */
  border: 2px solid #ccc; /* Border color */
  border-radius: 10px; /* Rounded edges */
  background-color: #f9f9f9; /* Background color */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow */
}

#starting-industry {
  min-width: 250px;
}

#previous-industry {
  min-width: 250px;
}

.heart {
  font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Noto Color Emoji', sans-serif;
  font-size: 24px; /* Adjust size as needed */
}

.game-controls .buttons {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  align-items: center;
  padding: 10px 20px; /* Example style */
}

.game-controls .buttons button {
  min-width: 200px;
  min-height: 50px;
  max-width: 400px;
  max-height: 100px;
  padding: 10px 20px; /* Example style */
  border-radius: 5px; /* Example style */
  color: white; /* Example style */
  border: none; /* Example style */
}

.game-controls .buttons button:disabled {
  color: grey; /* Set font color to grey when disabled */
  background-color: #ccc; /* Optional: Change background color when disabled */
  cursor: not-allowed; /* Optional: Change cursor to indicate disabled state */
}

#Lower-Button{
  background-color: var(--e-global-color-c09952e);
  cursor: pointer; /* Example style */
}

#Higher-Button{
  background-color: var(--e-global-color-815c770);
  cursor: pointer; /* Example style */
}
/*Styling for the cards grid*/

.cards-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr); /* Creates 3 columns */
  gap: 10px; /* Adds spacing between the cards */
  justify-content: center; /* Center the grid in the GameBoard */
  margin-top: 20px; /* Add margin for better spacing */
  max-width: 640px; /* Limit the maximum width of the grid */
  margin-left: auto; /* Center the grid horizontally */
  margin-right: auto; /* Center the grid horizontally */
}

/*Styling for the cards*/

.card {
  --card-width: 200px;
  width: var(--card-width);
  height: calc(0.5*var(--card-width));
  perspective: 1000px; /* Enable 3D space */
  cursor: pointer; /* Indicate that the card is clickable */
  background-color: transparent; /* Ensure the background is transparent */
}

.card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transform-style: preserve-3d;
  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
  background-color: grey;
}

.card-inner.selected {
  background-color: blue;
}

/* Keyframes for flip animation */
@keyframes flipAnimation {
  0% {
    transform: rotateY(0deg);
  }
  100% {
    transform: rotateY(180deg);
  }
}

/* When the card is flipping */
.card-inner.flipping {
  animation: flipAnimation 0.6s ease-in-out forwards; /* Apply keyframes animation */
}

/* When the card is flipped */
.card-inner.flipped {
  transform: rotateY(180deg); /* Ensure the card stays flipped without animation */
}

.card-front, .card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: 16px;
  padding: 10px;
  box-sizing: border-box;
}

/* Styling for the front of the card */
.card-front {
  color: black;
  background: lightgrey; /* Distinct background color for the front */
}

/* Styling for the back of the card */
.card-back {
  color: white;
  background: darkgrey; /* Distinct background color for the back */
  transform: rotateY(180deg); /* Initially hidden with a 180-degree rotation */
}

.card:hover .card-inner {
  transform: scale(1.05); /* Slightly enlarge the card on hover */
  transition: transform 0.3s ease; /* Smooth transition */
}

.restart {
  margin-top: 20px; /* Add space above the restart button */
  text-align: center; /* Center the button */
}

.qr-code {
  text-align: center; /* Center the QR code container */
  margin-top: 20px; /* Add some space above the QR code */
}

.qr-code-img {
  width: 150px; /* Set the width of the QR code image */
  height: auto; /* Maintain the aspect ratio */
  border: 2px solid #000; /* Add a border around the QR code */
  border-radius: 10px; /* Add rounded corners */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Add a subtle shadow */
}

